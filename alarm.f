( alarm.f )
: LEDS_OFF RED LED OFF YELLOW LED OFF GREEN LED OFF BUZZER LOW ;
: ALARM_OFF LCD CLEAR 'A 'L 'A 'R 'M 'SPACE 'O 'F 'F ;
: ALERT BEGIN 100 MSEC RED BLINK_BUZ BREAK_BUTTON IS_CLICKED UNTIL BREAK_BUTTON CLEAR_EVENT BUZZER LOW RED LED OFF ALARM_OFF QUIT ;

: DISTANCE_LED_DETECTION
    1 SEC DELAY
    LEDS_OFF
    BEGIN
    DEPTH 4 < WHILE 
		ECHO_PIN IS_HIGH IF TIME_OUT DELAY THEN TRIGGER
        BEGIN ECHO_PIN IS_HIGH 0 = WHILE REPEAT NOW
        BEGIN ECHO_PIN IS_HIGH WHILE REPEAT NOW
    REPEAT
    DEPTH 4 = IF 
        SWAP - 154 * 2 / 1 MSEC / -ROT
        SWAP - 154 * 2 / 1 MSEC /
        2DUP < IF DROP ELSE NIP THEN 

            DOWN CURSOR
            DUP 3E8 / DUP 0 = IF 'SPACE DROP ELSE N_PRINT THEN
            DUP 64 / DUP 0 = IF 'SPACE DROP ELSE N_PRINT THEN
            DUP 64 MOD A / N_PRINT
            DUP A MOD N_PRINT 'mm

            DUP . ." mm " CR
            DUP 5A < IF ALERT THEN 
            DUP 5A C8 WITHIN IF RED LED ON BUZZER HIGH THEN
            DUP C8 190 WITHIN IF YELLOW LED ON THEN
            DUP 190 > IF GREEN LED ON THEN
     ELSE STACK_CLEAR LEDS_OFF THEN ;


: SONAR_LED BEGIN 2 SEC DELAY DISTANCE_LED_DETECTION BREAK_BUTTON IS_CLICKED UNTIL BREAK_BUTTON CLEAR_EVENT ;

: MOVE_MSG LCD CLEAR 'M 'O 'V 'E 'SPACE 'D 'E 'T 'E 'C 'T 'E 'D ;
: SECURITY_SYSTEM
	BEGIN 
		PIR DUP MOTION_DETECTED IF CLEAR_EVENT ." Movimento rilevato" CR MOVE_MSG 
			BEGIN PIR IS_HIGH WHILE DISTANCE_LED_DETECTION REPEAT
		ELSE LEDS_OFF CLEAR_EVENT ." Nessun movimento" CR 1 SEC DELAY THEN
	BREAK_BUTTON IS_CLICKED UNTIL BREAK_BUTTON CLEAR_EVENT ;