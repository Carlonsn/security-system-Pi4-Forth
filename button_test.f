( Includi prima le librerie )
( utility.f )
( gpio.f )
( timer.f )
( event.f )
( led.f )

( DISPOSITIVI INPUT OUTPUT )
GPIO_ADDR E4 + CONSTANT PULLUP
GPIO8 CONSTANT BLUE_BUTTON
GPIO7 CONSTANT RED_BUTTON

RED_BUTTON GPREN0 ENABLE
BLUE_BUTTON GPREN0 ENABLE
( RED_BUTTON GPAREN0 ENABLE )
( BLUE_BUTTON GPAREN0 ENABLE )
( RED_BUTTON GPAFEN0 ENABLE )
( BLUE_BUTTON GPAFEN0 ENABLE )

( 10 NOT PRESSED 0 PRESSED )
( 0 NOT PRESSED 1 PRESSED )

: IS_PRESSED GPLEV0 @ AND 0 = IF 1 ELSE 0 THEN ;
: IS_CLICKED GPEDS0 @ AND 0 = IF 0 ELSE 1 THEN ;
: CLICK_COUNTER 0 ;
( VERSIONE 1 )
(
\ : PRESSED_Y ( button ) BEGIN DUP IS_PRESSED 1 = WHILE Y LED ON REPEAT Y LED OFF DROP ;
\ : PRESSED_G ( button ) BEGIN DUP IS_PRESSED 1 = WHILE G LED ON REPEAT G LED OFF DROP ;

\ : LOOP BEGIN 
\             RED_BUTTON PRESSED_Y 
\         BLUE_BUTTON IS_PRESSED UNTIL ;
)
( VERSIONE 2 )
: Y_LED_ON_UNTIL YELLOW ;
: G_LED_ON_UNTIL GREEN ;
: PRESSED ( led button ) BEGIN DUP IS_PRESSED 1 = WHILE OVER LED ON REPEAT OVER LED OFF 2DROP ;

: LOOP BEGIN 
            G_LED_ON_UNTIL
                RED_BUTTON PRESSED 
        BLUE_BUTTON IS_PRESSED UNTIL ;



: CLICKED_G_ON DUP IS_CLICKED 1 = IF G LED ON CLEAR_EVENT ELSE CLEAR_EVENT THEN ;
: CLICK_COUNTER_G_ON DUP IS_CLICKED 1 = IF G LED ON CLEAR_EVENT 1+ ELSE CLEAR_EVENT THEN ;
: CLICKED_G_OFF DUP IS_CLICKED 1 = IF G LED OFF CLEAR_EVENT 1+ ELSE CLEAR_EVENT THEN ;
: AND_LOGIC BEGIN RED_BUTTON IS_PRESSED BLUE_BUTTON IS_PRESSED AND 1 = WHILE Y LED ON REPEAT Y LED OFF ;


: CLICKED DUP IS_CLICKED 1 = IF CLEAR_EVENT 1000 DELAY 1+ ELSE CLEAR_EVENT THEN ;
( LOOP )

: LOOP CLICK_COUNTER BEGIN RED_BUTTON CLICKED BLUE_BUTTON IS_PRESSED UNTIL Y LED ON ;

( FUNZIONA )
: CLICK_LOOP BEGIN RED_BUTTON CLICKED_G_ON BLUE_BUTTON CLICKED_G_OFF AGAIN ;

( FUNZIONA )
: AND_LOOP BEGIN AND_LOGIC AGAIN ;

( FUNZIONA )
: ON_OFF_LOOP BEGIN RED_BUTTON CLICKED_G_ON RED_BUTTON CLICKED_G_OFF BLUE_BUTTON IS_PRESSED UNTIL ;
