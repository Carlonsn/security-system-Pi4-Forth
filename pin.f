( pin.f )
: INIT_PIN_BUTTONS
GPIO5 GPREN0 ENABLE
GPIO6 GPREN0 ENABLE
GPIO7 GPREN0 ENABLE
GPIO8 GPREN0 ENABLE ;
GPIO5 CONSTANT BUTTON5
GPIO6 CONSTANT BUTTON6
GPIO7 CONSTANT BUTTON7
GPIO8 CONSTANT BUTTON8

: BUTTONS_RESET BUTTON5 BUTTON6 OR BUTTON7 OR BUTTON8 OR CLEAR_EVENT ;
: SEQUENCE 8 = -ROT 6 = -ROT 5 = -ROT 2SWAP SWAP 7 = ; ( 7 5 6 8 )
: RESET STACK_CLEAR
        GPEDS0 @ 0<> IF
        BUTTONS_RESET THEN
        LCD CLEAR CURSOR !BLINKS ;

: PIN_MSG LCD CLEAR 'P 'I 'N ': CURSOR BLINKS ;
: PIN_ERR DOWN CURSOR 'W 'R 'O 'N 'G 'SPACE 'P 'I 'N  ;
: PIN_OK DOWN CURSOR 'C 'O 'R 'R 'E 'C 'T 'SPACE 'P 'I 'N ;
: PIN_CHECK
    BEGIN
        1 SEC DELAY
        RESET  
        ." DIGITA IL PIN E PREMI INVIO "
        PIN_MSG
        BEGIN
            BREAK_BUTTON IS_CLICKED EXIT_BUTTON IS_CLICKED OR 0 = WHILE
            BUTTON7 IS_CLICKED IF
            ." 7 " '7 BUTTON7 N_GPIO BUTTON7 CLEAR_EVENT 1 SEC DELAY THEN

            BUTTON5 IS_CLICKED IF
            ." 5 " '5 BUTTON5 N_GPIO BUTTON5 CLEAR_EVENT 1 SEC DELAY THEN 

            BUTTON6 IS_CLICKED IF
            ." 6 " '6 BUTTON6 N_GPIO BUTTON6 CLEAR_EVENT 1 SEC DELAY THEN

            BUTTON8 IS_CLICKED IF
            ." 8 " '8 BUTTON8 N_GPIO BUTTON8 CLEAR_EVENT 1 SEC DELAY THEN
        REPEAT
        BREAK_BUTTON CLEAR_EVENT
        

        EXIT_BUTTON IS_CLICKED IF
            FALSE
        ELSE
            0.5SEC YELLOW BLINK
            DEPTH 4 <> IF
                STACK_CLEAR
                FALSE
                ." ERRATA " CR PIN_ERR 
                0.5SEC RED BLINK 
            ELSE
                SEQUENCE
                AND AND AND
                DUP FALSE = IF
                    ." ERRATA " CR PIN_ERR
                    0.5SEC RED BLINK
                THEN 
            THEN 
        THEN
    TRUE = EXIT_BUTTON IS_CLICKED OR
    UNTIL
    EXIT_BUTTON IS_CLICKED IF
        EXIT_BUTTON CLEAR_EVENT
        FALSE
    ELSE
        ." CORRETTA " CR PIN_OK 
        1 SEC GREEN BLINK
        RESET
        TRUE
    THEN
;